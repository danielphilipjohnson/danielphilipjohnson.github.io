---
/**
 * Badge
 * Props:
 *  - tone: 'neutral' | 'success' | 'warn' | 'danger' | 'info' | 'moss'
 *  - variant: 'soft' | 'outline' | 'solid' (default 'soft')
 *  - pill?: boolean
 */
const { tone = "neutral", variant = "soft", pill = false } = Astro.props;

const toneMap: Record<string, string> = {
  neutral: "var(--border)",
  success: "var(--status-success)",
  warn: "var(--status-warn)",
  danger: "var(--color-danger-500)",
  info: "var(--color-water-600)",
  moss: "var(--color-moss-600)",
};

const color = toneMap[tone] ?? "var(--border)";
const base =
  "inline-flex items-center gap-1 px-3 py-1 text-xs leading-none border";
const shape = pill ? "rounded-full" : "rounded-sm";

const cls =
  variant === "outline"
    ? `${base} ${shape} text-[color:var(--badge-color)] bg-transparent border-[color:var(--badge-color)]`
    : variant === "solid"
      ? `${base} ${shape} text-white bg-[color:var(--badge-color)] border-[color:var(--badge-color)]`
      : /* soft (theme-aware) */
        `${base} ${shape}
       text-[color:var(--fg)]
       bg-[color-mix(in_oklab,var(--badge-color)_var(--badge-soft-mix),var(--bg))]
       border-[color-mix(in_oklab,var(--badge-color)_var(--badge-border-mix),var(--bg))]`;
---

<span class={cls} style={`--badge-color:${color}`}>
  <slot />
</span>
